- name: <OS> set locale
  shell: localectl set-locale {{ lang }}

- name: <OS> set timezone
  shell: timedatectl set-timezone {{ timezone }}

- name: <OS> set hostname
  shell: hostnamectl set-hostname {{ hostname }}

- name: <OS> disable ipv6
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: 1
    state: present

- name: <OS> disable ipv6
  sysctl:
    name: net.ipv6.conf.default.disable_ipv6
    value: 1
    state: present

- name: <OS> disable forwarding
  sysctl:
    name: net.ipv4.conf.all.forwarding
    value: 0
    state: present

- name: <OS> disable forwading
  sysctl:
    name: net.ipv4.conf.default.forwarding
    value: 0
    state: present

- name: <OS> disable selinux
  lineinfile:
    backup: yes
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=permissive'

- name: <OS> sudo without password
  lineinfile:
    backup: yes
    path: /etc/sudoers
    state: present
    regexp: '^%wheel\s'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'

- name: <OS> add normal user
  user:
    name: "{{ normal_user }}"
    shell: /bin/bash
    group: wheel

- name: <OS> setup authorized_keys of the normal user
  authorized_key:
    user: "{{ normal_user }}"
    state: present
    key: "{{ ssh_pub_key }}"

- name: <sshd> disable ssh login by root
  lineinfile:
    backup: yes
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^PermitRootLogin'
    line: 'PermitRootLogin no'

- name: <sshd> disable password auth for ssh
  lineinfile:
    backup: no
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^PasswordAuthentication'
    line: 'PasswordAuthentication no'

- name: <firewalld> stop firewalld
  service:
    name: firewalld
    state: stopped

- name: <firewalld> disable firewalld
  service:
    name: firewalld
    enabled: no

- name: <iptables> set default rules
  template:
    backup: yes
    src: templates/iptables.j2
    dest: /etc/sysconfig/iptables
    owner: root
    group: root
    mode: 0644

- name: <iptables> start iptables-service
  service:
    name: iptables
    state: started

- name: <iptables> enable iptables-service
  service:
    name: iptables
    enabled: yes

- name: <ntp> start chronyd
  service:
    name: chronyd
    state: started

- name: <ntp> enable chronyd
  service:
    name: chronyd
    enabled: yes

- name: <openssl> modify make-dummy-cert
  template:
    backup: yes
    src: templates/make-my-dummy-cert.j2
    dest: /etc/pki/tls/certs/make-my-dummy-cert
    owner: root
    group: root
    mode: 0755
